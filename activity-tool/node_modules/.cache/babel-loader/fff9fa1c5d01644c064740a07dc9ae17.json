{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vbikashr\\\\Desktop\\\\Projects\\\\Chapter 4\\\\activity-tool\\\\src\\\\components\\\\Current.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Current = ({\n  isRunning,\n  seconds,\n  setSeconds,\n  getTime,\n  currentStartTime,\n  setCurrentStartTime\n}) => {\n  _s();\n\n  //timer\n  // useEffect(() => {\n  //   if (isRunning) {\n  //     const id = window.setInterval(() => {\n  //       setSeconds((seconds) => seconds + 1);\n  //     }, 1000);\n  //     return () => window.clearInterval(id);\n  //   }\n  //   return undefined;\n  // }, [isRunning]);\n  // useEffect(() => {\n  //   if (isRunning) {\n  //     const id = window.setInterval(() => {\n  //       setSeconds(() => Date.now() - new Date(currentStartTime).getTime());\n  //     }, 1000);\n  //     return () => window.clearInterval(id);\n  //   }\n  //   return undefined;\n  // }, [isRunning]);\n  useLayoutEffect(() => {\n    if (isRunning) {\n      let timerId;\n\n      const f = () => {\n        setSeconds(x => x + 1);\n        timerId = requestAnimationFrame(f);\n      };\n\n      timerId = requestAnimationFrame(f);\n      return () => cancelAnimationFrame(timerId);\n    }\n  }, [isRunning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Aux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: getTime(seconds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Current, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\n_c = Current;\nexport default Current;\n\nvar _c;\n\n$RefreshReg$(_c, \"Current\");","map":{"version":3,"sources":["C:/Users/vbikashr/Desktop/Projects/Chapter 4/activity-tool/src/components/Current.js"],"names":["useState","useEffect","useLayoutEffect","Current","isRunning","seconds","setSeconds","getTime","currentStartTime","setCurrentStartTime","timerId","f","x","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,eAA9B,QAAqD,OAArD;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SADe;AAEfC,EAAAA,OAFe;AAGfC,EAAAA,UAHe;AAIfC,EAAAA,OAJe;AAKfC,EAAAA,gBALe;AAMfC,EAAAA;AANe,CAAD,KAOV;AAAA;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAP,EAAAA,eAAe,CAAC,MAAM;AACpB,QAAIE,SAAJ,EAAe;AACb,UAAIM,OAAJ;;AAEA,YAAMC,CAAC,GAAG,MAAM;AACdL,QAAAA,UAAU,CAAEM,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAV;AACAF,QAAAA,OAAO,GAAGG,qBAAqB,CAACF,CAAD,CAA/B;AACD,OAHD;;AAKAD,MAAAA,OAAO,GAAGG,qBAAqB,CAACF,CAAD,CAA/B;AAEA,aAAO,MAAMG,oBAAoB,CAACJ,OAAD,CAAjC;AACD;AACF,GAbc,EAab,CAACN,SAAD,CAba,CAAf;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIG,OAAO,CAACF,OAAD;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlDD;;GAAMF,O;;KAAAA,O;AAmDN,eAAeA,OAAf","sourcesContent":["import { useState, useEffect, useLayoutEffect } from \"react\";\r\n\r\nconst Current = ({\r\n  isRunning,\r\n  seconds,\r\n  setSeconds,\r\n  getTime,\r\n  currentStartTime,\r\n  setCurrentStartTime,\r\n}) => {\r\n  //timer\r\n  // useEffect(() => {\r\n  //   if (isRunning) {\r\n  //     const id = window.setInterval(() => {\r\n  //       setSeconds((seconds) => seconds + 1);\r\n  //     }, 1000);\r\n  //     return () => window.clearInterval(id);\r\n  //   }\r\n  //   return undefined;\r\n  // }, [isRunning]);\r\n\r\n  // useEffect(() => {\r\n  //   if (isRunning) {\r\n  //     const id = window.setInterval(() => {\r\n  //       setSeconds(() => Date.now() - new Date(currentStartTime).getTime());\r\n  //     }, 1000);\r\n  //     return () => window.clearInterval(id);\r\n  //   }\r\n  //   return undefined;\r\n  // }, [isRunning]);\r\n\r\n  useLayoutEffect(() => {\r\n    if (isRunning) {\r\n      let timerId;\r\n\r\n      const f = () => {\r\n        setSeconds((x) => x + 1);\r\n        timerId = requestAnimationFrame(f);\r\n      };\r\n\r\n      timerId = requestAnimationFrame(f);\r\n\r\n      return () => cancelAnimationFrame(timerId);\r\n    }\r\n  },[isRunning]);\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      <h2>Current Aux</h2>\r\n      <p>{getTime(seconds)}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Current;\r\n"]},"metadata":{},"sourceType":"module"}